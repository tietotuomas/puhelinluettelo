{"version":3,"sources":["services/personService.js","components/FilterField.js","components/NewForm.js","components/Person.js","components/PersonRenderLogic.js","components/Message.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","response","data","create","newPerson","post","remove","id","delete","update","updatedPerson","put","FilterField","filter","handleFilter","type","onChange","NewForm","newName","newNumber","handleNewName","handleNewPerson","handleNewNumber","onSubmit","value","Person","person","handleDelete","name","number","onClick","PersonRenderLogic","persons","map","toLowerCase","includes","Message","message","error","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","emptyMessage","setMessage","useEffect","database","handleNumberUpdate","personToBeUpdated","find","numberUpdated","catch","newMessage","resetMessage","newPersons","personCreated","setTimeout","event","target","preventDefault","alert","window","confirm","personWithId","concat","personToBeAdded","ReactDOM","render","document","getElementById"],"mappings":"yMACMA,EAAU,eAsBDC,EAFO,CAAEC,OAlBT,WACb,OAAOC,IAAMC,IAAIJ,GAASK,MAAK,SAACC,GAAD,OAAcA,EAASC,SAiBxBC,OAdjB,SAACC,GACd,OAAON,IAAMO,KAAKV,EAASS,GAAWJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SAa5BI,OAVzB,SAACC,GACd,OAAOT,IAAMU,OAAOb,EAAU,IAAMY,GAAIP,MAAK,SAACC,GAAD,OAAcA,EAASC,SAStBO,OANjC,SAACF,EAAIG,GAClB,OAAOZ,IACJa,IADI,UACGhB,EADH,YACcY,GAAMG,GACxBV,MAAK,SAACC,GAAD,OAAcA,EAASC,U,OCNhBU,EAXG,SAAC,GAA6B,EAA3BC,OAA4B,IAApBC,EAAmB,EAAnBA,aAC3B,OACE,mCACE,kDAEE,uBAAOC,KAAK,OAAOC,SAAUF,UCmBtBG,EAxBD,SAAC,GAMR,IALLC,EAKI,EALJA,QACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,gBAEA,OACE,mCACE,uBAAMC,SAAUF,EAAhB,UACE,yCACQ,uBAAOG,MAAON,EAASF,SAAUI,OAEzC,2CACU,uBAAOI,MAAOL,EAAWH,SAAUM,OAE7C,8BACE,wBAAQP,KAAK,SAAb,yBCPGU,EAXA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACxB,OACE,mCACE,8BACGD,EAAOE,KADV,IACiBF,EAAOG,OAAQ,IAC9B,wBAAQC,QAAU,kBAAMH,EAAaD,IAArC,0BCqBOK,EAxBW,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QAASnB,EAA2B,EAA3BA,OAAQc,EAAmB,EAAnBA,aAC5C,MAAkB,KAAXd,EACL,mCACGmB,EAAQC,KAAI,SAACP,GAAD,OACX,cAAC,EAAD,CAA0BA,OAAQA,EAAQC,aAAcA,GAA3CD,EAAOE,WAIxB,mCACGI,EACEnB,QAAO,SAACa,GAAD,OACNA,EAAOE,KAAKM,cAAcC,SAAStB,EAAOqB,kBAE3CD,KAAI,SAACP,GAAD,OACH,cAAC,EAAD,CAEEA,OAAQA,EACRC,aAAcA,GAFTD,EAAOE,YCNTQ,EAXC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,MAAwB,KAApBA,EAAQA,QACH,KAELA,EAAQC,MACH,qBAAKC,UAAU,QAAf,SAAwBF,EAAQA,UAGlC,qBAAKE,UAAU,eAAf,SAA+BF,EAAQA,WC8JjCG,G,MA9JH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOT,EAAP,KAAgBU,EAAhB,KACA,EAA8BD,mBAAS,IAAvC,mBAAOvB,EAAP,KAAgByB,EAAhB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOtB,EAAP,KAAkByB,EAAlB,KACA,EAA4BH,mBAAS,IAArC,mBAAO5B,EAAP,KAAegC,EAAf,KACMC,EAAe,CAAET,QAAS,GAAIC,OAAO,GAC3C,EAA8BG,mBAASK,GAAvC,mBAAOT,EAAP,KAAgBU,EAAhB,KAEAC,qBAAU,WACQpD,EAAcC,SACtBG,MAAK,SAACiD,GACZP,EAAWO,QAEZ,IAEH,IAoEMC,EAAqB,WACzB,IAAMC,EAAoBnB,EAAQoB,MAAK,SAAC1B,GAAD,OAAYA,EAAOE,OAASV,KAC7DR,EAAa,2BAAQyC,GAAR,IAA2BtB,OAAQV,IACtDvB,EACGa,OAAOC,EAAcH,GAAIG,GACzBV,MAAK,SAACC,GACLyC,EACEV,EAAQC,KAAI,SAACP,GAAD,OACVA,EAAOnB,KAAOG,EAAcH,GAAKmB,EAASzB,MAG9CoD,EAAc3C,MAEf4C,OAAM,SAAChB,GACNK,EAAW,IACXC,EAAa,IACb,IAAMW,EAAa,CACjBlB,QAAQ,kBAAD,OAAoBnB,EAApB,8CACPoB,OAAO,GAETS,EAAWQ,GACXC,IACA,IAAMC,EAAazB,EAAQnB,QAAO,SAACa,GAAD,OAAYA,EAAOE,OAASV,KAC9DwB,EAAWe,OAIXC,EAAgB,SAAChC,GACrBiB,EAAW,IACXC,EAAa,IACb,IAAMW,EAAa,CAAElB,QAAQ,SAAD,OAAWX,EAAOE,MAAQU,OAAO,GAC7DS,EAAWQ,GACXC,KAGIH,EAAgB,SAAC3C,GACrBiC,EAAW,IACXC,EAAa,IACb,IAAMW,EAAa,CACjBlB,QAAQ,WAAD,OAAa3B,EAAckB,KAA3B,wBAA+ClB,EAAcmB,QACpES,OAAO,GAETS,EAAWQ,GACXC,KAGIA,EAAe,WACnBG,YAAW,kBAAMZ,EAAWD,KAAe,CAAC,QAG9C,OACE,gCACE,2CACA,cAAC,EAAD,CAAST,QAASA,IAClB,cAAC,EAAD,CAAaxB,OAAQA,EAAQC,aA1DZ,SAAC8C,GACpBf,EAAUe,EAAMC,OAAOrC,UA2DrB,2CACA,cAAC,EAAD,CACEN,QAASA,EACTC,UAAWA,EACXE,gBAhIkB,SAACuC,GAGvB,GAFAA,EAAME,iBAGJ9B,EAAQoB,MACN,SAAC1B,GAAD,OAAYA,EAAOE,OAASV,GAAWQ,EAAOG,SAAWV,KAG3D4C,MAAM,GAAD,OAAI7C,EAAJ,wCACA,GAAIc,EAAQC,KAAI,SAACP,GAAD,OAAYA,EAAOE,QAAMO,SAASjB,GAErD8C,OAAOC,QAAP,UACK/C,EADL,4EAIAgC,QAEG,CACL,IAAMxB,EAAS,CAAEE,KAAMV,EAASW,OAAQV,GACxCvB,EAAcO,OAAOuB,GAAQ1B,MAAK,SAACkE,GACjCxB,EAAWV,EAAQmC,OAAOD,OAG5BR,EAAchC,KA0GZN,cAzEgB,SAACwC,GACrBjB,EAAWiB,EAAMC,OAAOrC,QAyEpBF,gBAtEkB,SAACsC,GACvBhB,EAAagB,EAAMC,OAAOrC,UAwExB,yCACA,cAAC,EAAD,CACEQ,QAASA,EACTnB,OAAQA,EACRc,aA9Ge,SAACD,GAChBsC,OAAOC,QAAP,iBAAyBvC,EAAOE,KAAhC,OACFhC,EAAcU,OAAOoB,EAAOnB,IAC3BP,MAAK,SAAAC,GACJ,IAAMwD,EAAazB,EAAQnB,QACzB,SAACuD,GAAD,OAAqBA,EAAgB7D,KAAOmB,EAAOnB,MAG/CgD,EAAa,CAAElB,QAAQ,WAAD,OAAaX,EAAOE,MAAQU,OAAO,GAC/DI,EAAWe,GACXV,EAAWQ,GACXC,OAEDF,OAAM,SAAChB,GACNK,EAAW,IACXC,EAAa,IACb,IAAMW,EAAa,CACjBlB,QAAQ,kBAAD,OAAoBX,EAAOE,KAA3B,8CACPU,OAAO,GAETS,EAAWQ,GACXC,IACA,IAAMC,EAAazB,EAAQnB,QAAO,SAACuD,GAAD,OAAqBA,EAAgBxC,OAASF,EAAOE,QACvFc,EAAWe,cCtEnBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.141216e6.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then((response) => response.data);\r\n};\r\n\r\nconst create = (newPerson) => {\r\n  return axios.post(baseUrl, newPerson).then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(baseUrl + \"/\" + id).then((response) => response.data);\r\n};\r\n\r\nconst update = (id, updatedPerson) => {\r\n  return axios\r\n    .put(`${baseUrl}/${id}`, updatedPerson)\r\n    .then((response) => response.data);\r\n};\r\n\r\nconst personService = { getAll, create, remove, update };\r\n\r\nexport default personService;\r\n","\r\nconst FilterField = ({ filter, handleFilter }) => {\r\n    return (\r\n      <>\r\n        <p>\r\n          filter shown with\r\n          <input type=\"text\" onChange={handleFilter} />\r\n        </p>\r\n      </>\r\n    );\r\n  };\r\n\r\n  export default FilterField","\r\nconst NewForm = ({\r\n    newName,\r\n    newNumber,\r\n    handleNewName,\r\n    handleNewPerson,\r\n    handleNewNumber,\r\n  }) => {\r\n    return (\r\n      <>\r\n        <form onSubmit={handleNewPerson}>\r\n          <div>\r\n            name: <input value={newName} onChange={handleNewName} />\r\n          </div>\r\n          <div>\r\n            number: <input value={newNumber} onChange={handleNewNumber} />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n      </>\r\n    );\r\n  };\r\n\r\n  export default NewForm","const Person = ({ person, handleDelete }) => {\r\n  return (\r\n    <>\r\n      <p>\r\n        {person.name} {person.number}{\" \"}\r\n        <button onClick={ () => handleDelete(person)}>delete</button>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import Person from \"./Person\";\r\n\r\nconst PersonRenderLogic = ({ persons, filter, handleDelete }) => {\r\n  return filter === \"\" ? (\r\n    <>\r\n      {persons.map((person) => (\r\n        <Person key={person.name} person={person} handleDelete={handleDelete} />\r\n      ))}\r\n    </>\r\n  ) : (\r\n    <>\r\n      {persons\r\n        .filter((person) =>\r\n          person.name.toLowerCase().includes(filter.toLowerCase())\r\n        )\r\n        .map((person) => (\r\n          <Person\r\n            key={person.name}\r\n            person={person}\r\n            handleDelete={handleDelete}\r\n          />\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersonRenderLogic;\r\n","const Message = ({ message }) => {\r\n  if (message.message === \"\") {\r\n    return null;\r\n  }\r\n  if (message.error) {\r\n    return <div className=\"error\">{message.message}</div>;\r\n  }\r\n\r\n  return <div className=\"confirmation\">{message.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/personService\";\nimport FilterField from \"./components/FilterField\";\nimport NewForm from \"./components/NewForm\";\nimport PersonRenderLogic from \"./components/PersonRenderLogic\";\nimport Message from \"./components/Message\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const emptyMessage = { message: \"\", error: false };\n  const [message, setMessage] = useState(emptyMessage);\n\n  useEffect(() => {\n    const promise = personService.getAll();\n    promise.then((database) => {\n      setPersons(database);\n    });\n  }, []);\n\n  const handleNewPerson = (event) => {\n    event.preventDefault();\n\n    if (\n      persons.find(\n        (person) => person.name === newName && person.number === newNumber\n      )\n    ) {\n      alert(`${newName} is already added to phonebook`);\n    } else if (persons.map((person) => person.name).includes(newName)) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        handleNumberUpdate();\n      }\n    } else {\n      const person = { name: newName, number: newNumber };\n      personService.create(person).then((personWithId) => {\n        setPersons(persons.concat(personWithId));\n      });\n\n      personCreated(person);\n    }\n  };\n\n  const handleDelete = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService.remove(person.id)\n      .then(response => {\n        const newPersons = persons.filter(\n          (personToBeAdded) => personToBeAdded.id !== person.id\n        );\n  \n        const newMessage = { message: `Deleted ${person.name}`, error: false };\n        setPersons(newPersons);\n        setMessage(newMessage);\n        resetMessage();\n      })\n      .catch((error) => {\n        setNewName(\"\");\n        setNewNumber(\"\");\n        const newMessage = {\n          message: `Information of ${person.name} has already been removed from the server.`,\n          error: true,\n        };\n        setMessage(newMessage);\n        resetMessage();\n        const newPersons = persons.filter((personToBeAdded) => personToBeAdded.name !== person.name);\n        setPersons(newPersons);\n      });\n\n    }\n  };\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleNumberUpdate = () => {\n    const personToBeUpdated = persons.find((person) => person.name === newName);\n    const updatedPerson = { ...personToBeUpdated, number: newNumber };\n    personService\n      .update(updatedPerson.id, updatedPerson)\n      .then((response) => {\n        setPersons(\n          persons.map((person) =>\n            person.id !== updatedPerson.id ? person : response\n          )\n        );\n        numberUpdated(updatedPerson);\n      })\n      .catch((error) => {\n        setNewName(\"\");\n        setNewNumber(\"\");\n        const newMessage = {\n          message: `Information of ${newName} has already been removed from the server.`,\n          error: true,\n        };\n        setMessage(newMessage);\n        resetMessage();\n        const newPersons = persons.filter((person) => person.name !== newName);\n        setPersons(newPersons);\n      });\n  };\n\n  const personCreated = (person) => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n    const newMessage = { message: `Added ${person.name}`, error: false };\n    setMessage(newMessage);\n    resetMessage();\n  };\n\n  const numberUpdated = (updatedPerson) => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n    const newMessage = {\n      message: `Updated ${updatedPerson.name}'s number to ${updatedPerson.number}`,\n      error: false,\n    };\n    setMessage(newMessage);\n    resetMessage();\n  };\n\n  const resetMessage = () => {\n    setTimeout(() => setMessage(emptyMessage), [4444]);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Message message={message} />\n      <FilterField filter={filter} handleFilter={handleFilter} />\n\n      <h3>Add a new</h3>\n      <NewForm\n        newName={newName}\n        newNumber={newNumber}\n        handleNewPerson={handleNewPerson}\n        handleNewName={handleNewName}\n        handleNewNumber={handleNewNumber}\n      />\n\n      <h3>Numbers</h3>\n      <PersonRenderLogic\n        persons={persons}\n        filter={filter}\n        handleDelete={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}